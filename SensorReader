#!/usr/bin/env python3

# SensorReader - Attempts to read all of the sensors configured in settings.SENSORS
# Copyright (C) 2018  John Snowdon
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


from iomodules.sensors.Cosworth import CosworthSensors
from iomodules.sensors.Demo import DemoSensors
from iomodules.sensors.GPIOGearIndicator import GearIndicatorSensors

# The settings file
from libs import settings

import time
import timeit

# Uncomment the sensor module that you want to test:

# Cossie ECU
driver = CosworthSensors(ecuType = "L8 Pectel", pressureType = "mbar")
test_sensor = "RPM"

# Gear indicator
#driver = GearIndicatorSensors()
#test_sensor = "GEAR"

# Demo sensors
#driver = DemoSensors()
#test_sensor = "RPM"

#if driver.__is_connected__():
	# Get all of our available sensors
#	sensors = list(driver.available())
#	sensors.sort()
	
#	for sensorId in sensors:
		
		# Get sensor data
#		data = driver.sensor(sensorId, force = True)
		
		# Get performance data for this read
#		perf = driver.performance(sensorId)
		
		# Binary representation
#		if data['rawValue'] <= 255:
#			b = bin(abs(data['rawValue']))[2:].zfill(8)
#		else:
#			b = bin(abs(data['rawValue']))[2:].zfill(16)
			
		# Sensor data and values
#		print(("Sensor[%6s]   Binary[%16s]   Hex[%6s]   Value[%8.2f]   Speed[%6.3fms]     Description[%s]" % (sensorId, b, hex(abs(data['rawValue'])), data['value'], perf['last'], data['sensor']['description'])))
	
#	driver.close()
